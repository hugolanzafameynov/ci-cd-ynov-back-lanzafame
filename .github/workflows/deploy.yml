name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job pour les tests avec MySQL local (toujours exécuté)
  test:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: myapp
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u testuser -ptestpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=30s
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
      
      - name: Set environment variables for tests
        run: |
          echo "DATABASE_URL=mysql+aiomysql://testuser:testpassword@localhost:3306/myapp" >> $GITHUB_ENV
          echo "JWT_SECRET=test-secret-key" >> $GITHUB_ENV
      
      - name: Wait for MySQL to be ready
        run: |
          # Attendre que MySQL soit prêt avec retry logic
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -u testuser -ptestpassword --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... attempt $i"
            sleep 2
          done
          
          # Test de connexion avec le bon protocole
          mysql -h 127.0.0.1 -P 3306 -u testuser -ptestpassword -e "SELECT 1 as test;" myapp

      - name: Initialize admin user
        run: |
          python src/init_admin.py
      
      - name: Run Python tests
        run: |
          pytest tests/ -v --disable-warnings

  deploy:
    # Déploiement en production avec Aiven MySQL
    # Variables d'environnement à configurer dans Vercel:
    # - DATABASE_URL: mysql+aiomysql://avnadmin:PASSWORD@mysql-xxx.aivencloud.com:PORT/defaultdb
    # - JWT_SECRET: your-production-jwt-secret
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        run: |
          # Retry logic pour éviter les rate limits
          for i in {1..3}; do
            if vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}; then
              echo "Deployment successful on attempt $i"
              break
            else
              echo "Deployment failed on attempt $i, waiting 60 seconds..."
              sleep 60
            fi
          done
